---
const { post } = Astro.props;
---

<article class="post-card">
  <div class="post-image">
    <a href={`/blog/${post.id}`}>
      <div
        class="image-placeholder"
        style={`background-color: ${["var(--base-color)", "var(--sub-color-1)", "var(--sub-color-3)", "var(--sub-color-4)"][Math.floor(Math.random() * 4)]}`}
      >
        <!-- <span class="category-tag">{post.category}</span> -->
        <img src={post.data.heroImage} alt="" />
      </div>
    </a>
  </div>
  <div class="post-content">
    <h2 class="post-title">
      <a href={`/blog/${post.id}`}>{post.data.title}</a>
    </h2>
    <div class="post-meta">
      <span class="post-date"
        >{
          new Date(post.data.pubDate).toLocaleDateString("ja-JP", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }</span
      >
      <!-- {
        post.tags && (
          <div class="post-tags">
            {post.tags.slice(0, 2).map((tag) => (
              <a href={`/tags/${tag.toLowerCase()}`} class="tag">
                {tag}
              </a>
            ))}
            {post.tags.length > 2 && (
              <span class="more-tags">+{post.tags.length - 2}</span>
            )}
          </div>
        )
      } -->
    </div>
    <p class="post-excerpt">{post.data.description}</p>
    <a href={`/blog/${post.id}`} class="read-more">続きを読む →</a>
  </div>
</article>

<style lang="scss">
  .post-card {
    background-color: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    width: 100%;

    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
  }

  .post-image {
    height: 200px;
    overflow: hidden;

    a {
      display: block;
      height: 100%;
    }

    .image-placeholder {
      width: 100%;
      height: 100%;
      position: relative;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-title {
    font-size: 1.3rem;
    margin: 0 0 0.5rem;
    line-height: 1.4;

    a {
      color: var(--text-color);
      text-decoration: none;

      &:hover {
        color: var(--base-color);
      }
    }
  }

  .post-meta {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .post-date {
    font-size: 0.85rem;
    color: #666;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;

    .tag {
      font-size: 0.75rem;
      background-color: var(--sub-color-3);
      color: var(--text-color);
      padding: 0.2rem 0.5rem;
      border-radius: 50px;

      &:hover {
        background-color: var(--base-color);
      }
    }

    .more-tags {
      font-size: 0.75rem;
      color: #666;
    }
  }

  .post-excerpt {
    font-size: 0.95rem;
    margin-bottom: 1.5rem;
    line-height: 1.6;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .read-more {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-color);

    &:hover {
      color: var(--base-color);
    }
  }

  @media (max-width: 768px) {
    .post-card {
      margin-bottom: 1.5rem;
    }

    .post-image {
      height: 180px;
    }

    .post-content {
      padding: 1.2rem;
    }

    .post-title {
      font-size: 1.2rem;
    }

    .post-excerpt {
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }
  }
</style>
