---
import { getCollection } from 'astro:content';
import Tags from './Tags';

const { type = 'latest', max = -1, tag = '' } = Astro.props;
let memos = (await getCollection('memo')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

if (type == 'tag') {
  memos = memos.filter((memo) => memo.data.tags && memo.data.tags.map((tag) => tag.toLowerCase()).includes(tag));
}
if (0 <= max) {
  memos = memos.slice(0, max);
}
---

<div class="memos-list">
  {
    memos.map((memo) => (
      <article class="memo-item">
        <h3 class="memo-title">
          <a href={`/memo/${memo.id}`}>{memo.data.title}</a>
        </h3>
        <div class="memo-meta">
          <span class="memo-date">
            {new Date(memo.data.pubDate).toLocaleDateString('ja-JP', {
              year: 'numeric',
              month: 'short',
              day: 'numeric',
            })}
          </span>
          <Tags tags={memo.data.tags} />
        </div>
      </article>
    ))
  }

  <a href="/memo" class="view-all">すべてのメモを見る →</a>
</div>

<style lang="scss">
  .memos-list {
    background-color: white;
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  .memo-item {
    padding: 1rem 0;
    border-bottom: 1px dashed rgba(0, 0, 0, 0.1);

    &:last-of-type {
      border-bottom: none;
    }
  }

  .memo-title {
    font-size: 1rem;
    margin: 0 0 0.5rem;
    line-height: 1.4;

    a {
      color: var(--text-color);
      text-decoration: none;

      &:hover {
        color: var(--base-color);
      }
    }
  }

  .memo-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .memo-date {
    font-size: 0.85rem;
    color: #666;
  }

  .view-all {
    display: block;
    text-align: right;
    margin-top: 1rem;
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-color);

    &:hover {
      color: var(--base-color);
    }
  }
</style>
