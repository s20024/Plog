---
import Layout from "../../layouts/BaseLayout.astro";
import { type CollectionEntry, getCollection } from 'astro:content';
import { render } from 'astro:content';
import Profile from "../../components/Profile.astro";

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post, index) => {
    const prevPost = index > 0 ? posts[index - 1] : null;
    const nextPost = index < posts.length - 1 ? posts[index + 1] : null;
    return {
      params: { slug: post.id },
      props: { post, prevPost, nextPost },
    };
  });
}

type Props = CollectionEntry<'blog'>;

const { post, prevPost, nextPost } = Astro.props;
const { Content } = await render(post);
---

<Layout title={`${post.data.title} - Cute Blog`}>
  <div class="container">
    <article class="post-container">
      <header class="post-header">
        <!-- <div class="post-category">{category}</div> -->
        <h1 class="post-title">{post.data.title}</h1>
        <div class="post-meta">
          <time class="post-date"
            >{
              new Date(post.data.pubDate).toLocaleDateString("ja-JP", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</time
          >
          <!-- {
            tags && (
              <div class="post-tags">
                {tags.map((tag: string) => (
                  <a href={`/tags/${tag.toLowerCase()}`} class="tag">
                    {tag}
                  </a>
                ))}
              </div>
            )
          } -->
        </div>
      </header>

      <div class="post-content">
        <!-- 実際の実装ではMDXコンテンツがここに表示されます -->
        <!-- <p>
          この記事の内容は開発中です。実際の実装ではMDXファイルから内容を取得して表示します。
        </p> -->
        <Content />
      </div>

      <footer class="post-footer">

        <div class="post-navigation">
          {prevPost && (
            <a href={`/blog/${prevPost.id}`} class="prev-post">
              <span>前の記事</span>
              <p>{prevPost.data.title}</p>
            </a>
          )}
          {nextPost && (
            <a href={`/blog/${nextPost.id}`} class="next-post">
              <span>次の記事</span>
              <p>{nextPost.data.title}</p>
            </a>
          )}
        </div>

        <Profile />

      </footer>
    </article>
  </div>
</Layout>

<style lang="scss">
  .post-container {
    max-width: 800px;
    margin: 0 auto;
    background-color: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
  }

  .post-header {
    padding: 2rem 2rem 1.5rem;
    text-align: center;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  .post-category {
    display: inline-block;
    background-color: var(--base-color);
    color: var(--text-color);
    font-size: 0.9rem;
    font-weight: 600;
    padding: 0.3rem 1rem;
    border-radius: 50px;
    margin-bottom: 1rem;
  }

  .post-title {
    font-size: 2rem;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .post-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .post-date {
    font-size: 0.9rem;
    color: #666;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;

    .tag {
      font-size: 0.8rem;
      background-color: var(--sub-color-3);
      color: var(--text-color);
      padding: 0.2rem 0.6rem;
      border-radius: 50px;

      &:hover {
        background-color: var(--base-color);
      }
    }
  }

  .post-content {
    padding: 2rem;
    line-height: 1.8;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin-top: 2rem;
      margin-bottom: 1rem;
    }

    p {
      margin-bottom: 1.5rem;
    }

    img {
      max-width: 100%;
      border-radius: 8px;
      margin: 1.5rem 0;
    }

    ul,
    ol {
      margin-bottom: 1.5rem;
      padding-left: 1.5rem;

      li {
        margin-bottom: 0.5rem;
      }
    }

    blockquote {
      border-left: 4px solid var(--base-color);
      padding-left: 1rem;
      margin-left: 0;
      margin-right: 0;
      font-style: italic;
      color: #555;
    }

    code {
      background-color: #f5f5f5;
      padding: 0.2rem 0.4rem;
      border-radius: 4px;
      font-family: monospace;
    }

    pre {
      background-color: #f5f5f5;
      padding: 1rem;
      border-radius: 8px;
      overflow-x: auto;
      margin-bottom: 1.5rem;

      code {
        background-color: transparent;
        padding: 0;
      }
    }
  }

  .post-footer {
    padding: 2rem;
    border-top: 1px solid rgba(0, 0, 0, 0.05);
  }

  .post-navigation {
    margin-bottom: 2rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;

    a {
      padding: 1rem;
      background-color: rgba(0, 0, 0, 0.02);
      border-radius: 8px;
      transition: background-color 0.2s ease;

      &:hover {
        background-color: var(--base-color);
      }

      span {
        display: block;
        font-size: 0.8rem;
        margin-bottom: 0.3rem;
        opacity: 0.7;
      }

      p {
        font-size: 1rem;
        font-weight: 600;
        margin: 0;
      }

      &.prev-post {
        text-align: left;
      }

      &.next-post {
        text-align: right;
      }
    }
  }

  @media (max-width: 768px) {
    .post-header {
      padding: 1.5rem 1.5rem 1rem;
    }

    .post-title {
      font-size: 1.8rem;
    }

    .post-content {
      padding: 1.5rem;
    }

    .post-footer {
      padding: 1.5rem;
    }

    .author-box {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }

    .post-navigation {
      grid-template-columns: 1fr;

      a {
        text-align: center;

        &.prev-post,
        &.next-post {
          text-align: center;
        }
      }
    }
  }
</style>
